AWSTemplateFormatVersion: "2010-09-09"
Description: A template for voice controlled photo album app
Resources:
  S3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties: 
      AccessControl: PublicRead
      BucketName: f2020-a3-static-website-host-bucket
      WebsiteConfiguration:
        IndexDocument: index.html
      VersioningConfiguration: 
        Status: Enabled
    
  S3Bucketphotos:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties: 
      AccessControl: PublicRead
      BucketName: a3-b2-jars

  S3Bucketcodepipeline:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
    Properties: 
      AccessControl: PublicRead
      BucketName: codepipeline-us-east-2-238322395553

  PhotobucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: photos-s3-bucket
      PolicyDocument: {
        "Version": "2012-10-17",
        "Id": "Policy1607802088415",
        "Statement": [
         {
            "Sid": "Stmt1607809157926",
            "Effect": "Allow",
            "Principal": "*",
            "Action": [
                "s3:GetObject",
                "s3:PutObject"
            ],
            "Resource": "arn:aws:s3:::a3-b2-jars/*"
          }
        ]
      }

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Cloud A3 - Voice Controlled Photo Search
      Description: Voice Controlled Photo Search

  APIStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref RestApi
      StageName: v1

  Photo:
    Type: AWS::ApiGateway::Model
    Properties: 
      ContentType: objcet
      Description: Photo model
      Name: Photo
      RestApiId: !Ref RestApi
      Schema: 
        url:
          type: string
        labels:
          type: array
          items:
            type: string

  SearchResponse:
    Type: AWS::ApiGateway::Model
    Properties: 
      ContentType: objcet
      Description: SearchResponse model
      Name: SearchResponse
      RestApiId: !Ref RestApi
      Schema: 
        results:
          type: array
          items: !Ref Photo
        
  Error:
    Type: AWS::ApiGateway::Model
    Properties: 
      ContentType: objcet
      Description: Error model
      Name: Error
      RestApiId: !Ref RestApi
      Schema: 
        code:
          type: integer
          format: int32
        message:
          type: string 

  SearchParameter:
    Type: AWS::ApiGateway::Model
    Properties: 
      ContentType: objcet
      Description: SearchParameter model
      Name: q
      RestApiId: !Ref RestApi
      Schema: 
        type: string

  searchmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: False
      HttpMethod: GET
      Integration:
        IntegrationHttpMethod: "GET"
        Type: "AWS_PROXY"
        Uri: "arn:aws:lambda:us-east-1:456240511584:function:A3-LF2"
      MethodResponses: 
          - 
            ResponseModels: 
              application/json: SearchResponse
            StatusCode: 200
          - 
            ResponseModels: 
              application/json: Error
            StatusCode: 403
          - 
            ResponseModels: 
              application/json: Error
            StatusCode: 500
      RequestParameters: 
        method.request.path.q: true
      ResourceId: !GetAtt RestApi.RootResourceId
      RestApiId: !Ref RestApi
      
  uploadmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: False
      HttpMethod: PUT
      Integration:
        IntegrationHttpMethod: PUT
        Type: "AWS"
        Uri: arn:aws:apigateway:us-east-1-2:s3:action/PutObject&Bucket={bucket}&Key={key}"
      MethodResponses: 
          -
            StatusCode: 200
          -
            ResponseModels: 
              application/json: Error
            StatusCode: 403
          -
            ResponseModels: 
              application/json: Error
            StatusCode: 500
      ResourceId: !GetAtt RestApi.RootResourceId
      RestApiId: !Ref RestApi
      
  # photoindexlambda:
  #   Type: AWS::Lambda::Function
  #   Properties: 
  #     Code: 
  #         S3Bucket: my-photo-bucket0
  #         S3Key: Backend
  #     FunctionName: photo-index
  #     Handler: lambda1_index_photos.lambda_handler
  #     Role: arn:aws:iam::178190676612:role/service-role/index-photos-role-v85kkxtk
  #     Runtime: python3.8

  # searchphotolambda:
  #   Type: AWS::Lambda::Function
  #   Properties: 
  #     Code: 
  #       S3Bucket: my-photo-bucket0
  #       S3Key: Backend
  #     FunctionName: search-photos
  #     Handler: lambda2_search_photos.lambda_handler
  #     Role: arn:aws:iam::178190676612:role/service-role/index-photos-role-v85kkxtk
  #     Runtime: python3.8

  ElasticSearch:
    Type: AWS::Elasticsearch::Domain
    Properties:  
      DomainName: photos
  
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: registry/repository:aws/codebuild/aws/codebuild/standard:4.0
        Type: LINUX_GPU_CONTAINER
      Name: a3-cloud-build-lf-project 
      QueuedTimeoutInMinutes: 480
      ServiceRole: arn:aws:iam::456240511584:role/service-role/a3-codebuild-cloud-build-lf-project-service-role
      Source: 
        Type: CODEPIPELINE
      TimeoutInMinutes: 60
  
  LambdaCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: f2020-a3-pipeline-1
      ArtifactStore: 
        Location: codepipeline-us-east-2-238322395553
        Type: S3
      RestartExecutionOnUpdate: True
      RoleArn: arn:aws:iam::456240511584:role/service-role/AWSCodePipelineServiceRole-us-east-2-f2020-a3-pipeline-1
      Stages: 
        - 
          Name: Source 
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source 
                Owner: ThirdParty 
                Version: 1 
                Provider: GitHub
              Configuration:
                Owner: AnchitCap
                Repo: voice-controlled-photo-search
                Branch: main
                #OAuthToken: 514b8a54386fd3ad7b20a54c7f097d9030079c05
              OutputArtifacts:
                -                
                  Name: SourceArtifact
              RunOrder: 1
        -
          Name: Build
          Actions: 
            - 
              Name: BuildAction
              ActionTypeId: 
                Category: Build 
                Owner: AWS 
                Version: 1 
                Provider: CodeBuild
              InputArtifacts:
                -
                  Name: SourceArtifact
              OutputArtifacts: 
                -
                  Name: BuildArtifact
              RunOrder: 1   

          Name: Deploy
          Actions:
            -          
              Name: ChangeOrReplaceSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
                RunOrder: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE 
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                ChangeSetName: as-cp-1-set
                #ParameterOverrides: '{"ProjectId": "my-project","CodeDeployRole": "CodeDeploy_Role_ARN"}'
                RoleArn: arn:aws:iam::456240511584:role/a3-cloud-formation-role
                StackName: as-cp-1-stack
                #TemplateConfiguration: 'as-cp-1-stack--BuildArtifact::template.json'
                TemplatePath: 'as-cp-1-stack--BuildArtifact::template.yml'
              OutputArtifacts: []
              InputArtifacts:
              - Name: as-cp-1-stack-BuildArtifact
            -
              Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
                RunOrder: 2
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                ChangeSetName: as-cp-1-set
                #ParameterOverrides: '{"ProjectId": "my-project","CodeDeployRole": "CodeDeploy_Role_ARN"}'
                RoleArn: arn:aws:iam::456240511584:role/a3-cloud-formation-role
                StackName: as-cp-1-stack
                #TemplateConfiguration: 'as-cp-1-stack--BuildArtifact::template.json'
                TemplatePath: 'as-cp-1-stack--BuildArtifact::template.yml'
              OutputArtifacts: []
              InputArtifacts:
              - Name: as-cp-1-stack-BuildArtifact

  FrontendCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: f2020-a3-code-pipeline-2
      ArtifactStore: 
        Location: codepipeline-us-east-2-238322395553
        Type: S3
      RestartExecutionOnUpdate: True
      RoleArn: arn:aws:iam::456240511584:role/service-role/AWSCodePipelineServiceRole-us-east-2-f2020-a3-code-pipeline-2
      Stages: 
        - 
          Name: Source 
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source 
                Owner: ThirdParty 
                Version: 1 
                Provider: GitHub
              Configuration:
                Owner: AnchitCap
                Repo: voice-controlled-photo-search
                Branch: front-end
                OAuthToken: 514b8a54386fd3ad7b20a54c7f097d9030079c05
              OutputArtifacts:
                -                
                  Name: SourceArtifact
              Configuration: 
                S3Bucket: !Ref S3Bucketcodepipeline

          Name: Deploy
          Action:
            -
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Category: Deploy
                Version: 1
              Region: us-east-1
              Name: Source
              Configuration:
                BucketName: f2020-a3-static-website-host-bucket
                Extract: true
              InputArtifacts:
                - Name: SourceArtifact

        

  # IndexPhotosRoleV85KkxtkRole:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "lambda.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/service-role/"
  #     MaxSessionDuration: 3600
  #     RoleName: index-photos-role-v85kkxtk

  # VoiceLambda2Role:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     Description: "Allows Lambda functions to call AWS services on your behalf."
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "lambda.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/"
  #     MaxSessionDuration: 3600
  #     RoleName: voice_lambda2
  
  # AiPhotoSearchRole:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     Description: "Allows S3 to call AWS services on your behalf."
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service:
  #               - "s3.amazonaws.com"
  #               - "apigateway.amazonaws.com"
  #               - "lambda.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/"
  #     MaxSessionDuration: 3600
  #     RoleName: ai_photo_search

  # CodeDeployServiceRole:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     Description: "Allows CodeDeploy to call AWS services such as Auto Scaling on your behalf."
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Sid: ""
  #           Effect: "Allow"
  #           Principal:
  #             Service: "codedeploy.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/"
  #     MaxSessionDuration: 3600
  #     RoleName: CodeDeployServiceRole

  # CweRoleUsEast1PhotoAlbumFrontend:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "events.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/service-role/"
  #     MaxSessionDuration: 3600
  #     RoleName: cwe-role-us-east-1-PhotoAlbumFrontend
  
  # AwsCodePipelineServiceRoleUsEast1PhotoAlbumFrontend:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "codepipeline.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/service-role/"
  #     MaxSessionDuration: 3600
  #     RoleName: AWSCodePipelineServiceRole-us-east-1-PhotoAlbumFrontend
  
  # CweRoleUsEast1LambdaPipeline:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "events.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/service-role/"
  #     MaxSessionDuration: 3600
  #     RoleName: cwe-role-us-east-1-lambda-pipeline

  # CodebuildLambdaPipelineBuildServiceRole:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "codebuild.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/service-role/"
  #     MaxSessionDuration: 3600
  #     RoleName: codebuild-lambda-pipeline-build-service-role

  # CfnLambdaPipeline:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     Description: "Allows CloudFormation to create and manage AWS stacks and resources on your behalf."
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Sid: ""
  #           Effect: "Allow"
  #           Principal:
  #             Service: "cloudformation.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/"
  #     MaxSessionDuration: 3600
  #     RoleName: cfn-lambd
  
  # AwsCodePipelineServiceRoleUsEast1LambdaPipeline:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "codepipeline.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/service-role/"
  #     MaxSessionDuration: 3600
  #     RoleName: AWSCodePipelineServiceRole-us-east-1-lambda-pipeline
 
  # CodeDeployDemoEc2InstanceProfile:
  #   Type: "AWS::IAM::Role"
  #   Properties:
  #     Description: "Allows EC2 instances to call AWS services on your behalf."
  #     AssumeRolePolicyDocument:
  #       Version: "2012-10-17"
  #       Statement:
  #         - Effect: "Allow"
  #           Principal:
  #             Service: "ec2.amazonaws.com"
  #           Action: "sts:AssumeRole"
  #     Path: "/"
  #     MaxSessionDuration: 3600
  #     RoleName: CodeDeployDemo-EC2-Instance-Profile  

  # startpipelineexecutionuseast1lambdapipeline:
  #   Type: AWS::IAM::Policy
  #   Properties: 
  #     Groups: 
  #       - String
  #     PolicyDocument: 
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Action:
  #             - codepipeline:StartPipelineExecution
  #           Resource:
  #           - arn:aws:codepipeline:us-east-1:178190676612:lambda-pipeline
  #     PolicyName: start-pipeline-execution-us-east-1-lambda-pipeline
  #     Roles: 
  #       - cwe-role-us-east-1-lambda-pipeline

  # startpipelineexecutionuseast1PhotoAlbumFrontendPolicy:
  #   Type: AWS::IAM::Policy
  #   Properties: 
  #     Groups: 
  #       - String
  #     PolicyDocument: 
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Action:
  #             - codepipeline:StartPipelineExecution
  #           Resource:
  #             - arn:aws:codepipeline:us-east-1:178190676612:PhotoAlbumFrontend
  #     PolicyName: start-pipeline-execution-us-east-1-PhotoAlbumFrontend
  #     Roles: 
  #       - cwe-role-us-east-1-PhotoAlbumFrontend

  # CodeBuildBasePolicylambdapipelinebuild:
  #   Type: AWS::IAM::Policy
  #   Properties: 
  #     Groups: 
  #       - String
  #     PolicyDocument: 
  #       Version: '2012-10-17'
  #       Statement:
  #         - Effect: Allow
  #           Action:
  #             - codepipeline:StartPipelineExecution
  #           Resource:
  #             - arn:aws:codepipeline:us-east-1:178190676612:PhotoAlbumFrontend
  #     PolicyName: start-pipeline-execution-us-east-1-PhotoAlbumFrontend
  #     Roles: 
  #       - cwe-role-us-east-1-PhotoAlbumFrontend