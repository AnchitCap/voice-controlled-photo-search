AWSTemplateFormatVersion: "2010-09-09"
Description: A template for voice controlled photo album app
Resources:
  #testing codepipeline 3

  #S3Bucket:
  #  Type: AWS::S3::Bucket
  #  DeletionPolicy: Retain
  #  Properties: 
  #    AccessControl: PublicRead
  #    BucketName: f2020-a3-static-website-host-bucket-test
  #    WebsiteConfiguration:
  #      IndexDocument: index.html
  #    VersioningConfiguration: 
  #      Status: Enabled
    
  #S3Bucketphotos:
  #  Type: AWS::S3::Bucket
  #  DeletionPolicy: Retain
  #  Properties: 
  #    AccessControl: PublicRead
  #    BucketName: a3-b2-jars

  #S3Bucketcodepipeline:
  #  Type: AWS::S3::Bucket
  #  DeletionPolicy: Retain
  #  Properties: 
  #    AccessControl: PublicRead
  #    #BucketName: codepipeline-us-east-2-238322395553
  #    BucketName: codepipeline-us-east-1-441414766425

  #PhotobucketPolicy:
  #  Type: AWS::S3::BucketPolicy
  #  Properties: 
  #    Bucket: photos-s3-bucket
  #    PolicyDocument: {
  #      "Version": "2012-10-17",
  #      "Id": "Policy1607802088415",
  #      "Statement": [
  #       {
  #          "Sid": "Stmt1607809157926",
  #          "Effect": "Allow",
  #          "Principal": "*",
  #          "Action": [
  #              "s3:GetObject",
  #              "s3:PutObject"
  #          ],
  #          "Resource": "arn:aws:s3:::a3-b2-jars/*"
  #        }
  #      ]
  #    }

  RestApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Cloud A3 - Voice Controlled Photo Search - pipelinetest
      Description: Voice Controlled Photo Search

  Photo:
    Type: AWS::ApiGateway::Model
    Properties:
      RestApiId: !Ref RestApi
      ContentType: application/json
      Description: Photo model
      Name: Photo
      Schema:
        type: object
        properties:
          url:
            type: string
          labels:
            type: array
            items:
              type: string

  SearchResponse:
    Type: AWS::ApiGateway::Model
    Properties: 
      ContentType: application/json
      Description: SearchResponse model
      Name: SearchResponse
      RestApiId: !Ref RestApi
      Schema:
        type: object
        properties:
          results:
            type: array
            #items: !Ref Photo
        
  #Error:
  #  Type: AWS::ApiGateway::Model
  #  Properties: 
  #    ContentType: objcet
  #    Description: Error model
  #    Name: Error
  #    RestApiId: !Ref RestApi
  #    Schema: 
  #      code:
  #        type: integer
  #        format: int32
  #      message:
  #        type: string 

  #SearchParameter:
  #  Type: AWS::ApiGateway::Model
  #  Properties: 
  #    ContentType: objcet
  #    Description: SearchParameter model
  #    Name: q
  #    RestApiId: !Ref RestApi
  #    Schema: 
  #      type: string

  search:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt 
        - RestApi
        - RootResourceId
      PathPart: search
  
  searchmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: False
      HttpMethod: GET
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: GET
        Uri: "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:456240511584:function:A3-LF2/invocations"
      MethodResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: true
            ResponseModels: 
              application/json: SearchResponse
            ResponseParameters:
              method.response.header.Access-Control-Allow-Origin: true
          - StatusCode: 403
            ResponseModels: 
              application/json: Error
          - StatusCode: 500
            ResponseModels: 
              application/json: Error
      RequestParameters: 
        method.request.querystring.q: true
      AuthorizationType: NONE
      ResourceId: !Ref search
      RestApiId: !Ref RestApi

  upload:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt 
        - RestApi
        - RootResourceId
      PathPart: upload

  bucket:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref upload
      PathPart: '{bucket}'

  key:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !Ref bucket
      PathPart: '{key}'

  uploadmethod:
    Type: AWS::ApiGateway::Method
    Properties:
      ApiKeyRequired: False
      HttpMethod: PUT
      Integration:
        Credentials: arn:aws:iam::456240511584:role/A3-cf-admin
        IntegrationHttpMethod: PUT
        Type: "AWS"
        Uri: arn:aws:apigateway:us-east-1:s3:action/PutObject&Bucket={bucket}&Key={key}"
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.X-Requested-With: "'*'"
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,x-requested-with'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,PUT,GET,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
            ResponseTemplates:
              application/json: ''
      MethodResponses: 
          - StatusCode: 200
            ResponseParameters:
              method.response.header.X-Requested-With: true
              method.response.header.Access-Control-Allow-Headers: true
              method.response.header.Access-Control-Allow-Origin: true
              method.response.header.Access-Control-Allow-Methods: true
          - StatusCode: 403
            ResponseModels: 
              application/json: Error
          - StatusCode: 500
            ResponseModels: 
              application/json: Error
      AuthorizationType: "NONE"
      ResourceId: !Ref key
      RestApiId: !Ref RestApi

  Deployment: 
    Type: AWS::ApiGateway::Deployment
    Properties: 
      RestApiId: !Ref RestApi
      Description: "My deployment"
      StageName: "test"
    DependsOn:
      - searchmethod
      - uploadmethod

  APIStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId: !Ref RestApi
      StageName: v1
      DeploymentId: !Ref Deployment
    DependsOn:
      - searchmethod
      - uploadmethod
      - Deployment

  #ElasticSearch:
  #  Type: AWS::Elasticsearch::Domain
  #  Properties:  
  #    DomainName: photos
  
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties: 
      Artifacts: 
        Type: CODEPIPELINE
      Environment: 
        ComputeType: BUILD_GENERAL1_SMALL
        Image: registry/repository:aws/codebuild/aws/codebuild/standard:4.0
        Type: LINUX_GPU_CONTAINER
      Name: a3-cloud-build-lf-project-test
      QueuedTimeoutInMinutes: 480
      ServiceRole: arn:aws:iam::456240511584:role/service-role/a3-codebuild-cloud-build-lf-project-service-role
      Source: 
        Type: CODEPIPELINE
      TimeoutInMinutes: 60
  
  LambdaCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties: 
      Name: f2020-a3-pipeline-1-test
      ArtifactStore: 
        #Location: codepipeline-us-east-2-238322395553
        Location: codepipeline-us-east-1-441414766425
        Type: S3
      RestartExecutionOnUpdate: True
      #RoleArn: arn:aws:iam::456240511584:role/service-role/AWSCodePipelineServiceRole-us-east-2-f2020-a3-pipeline-1
      RoleArn: arn:aws:iam::456240511584:role/service-role/AWSCodePipelineServiceRole-us-east-1-f2020-a3-pipeline-1
      Stages: 
        - 
          Name: Source 
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source 
                Owner: ThirdParty 
                Version: 1 
                Provider: GitHub
              Configuration:
                Owner: AnchitCap
                Repo: voice-controlled-photo-search
                #Branch: main
                Branch: test
                #OAuthToken: 514b8a54386fd3ad7b20a54c7f097d9030079c05
              OutputArtifacts:
                -                
                  Name: SourceArtifact
              RunOrder: 1
        -
          Name: Build
          Actions: 
            - 
              Name: BuildAction
              ActionTypeId: 
                Category: Build 
                Owner: AWS 
                Version: 1 
                Provider: CodeBuild
              InputArtifacts:
                -
                  Name: SourceArtifact
              OutputArtifacts: 
                -
                  Name: BuildArtifact
              RunOrder: 1   

          Name: Deploy
          Actions:
            -          
              Name: ChangeOrReplaceSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
                RunOrder: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE 
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                ChangeSetName: as-cp-1-set
                #ParameterOverrides: '{"ProjectId": "my-project","CodeDeployRole": "CodeDeploy_Role_ARN"}'
                RoleArn: arn:aws:iam::456240511584:role/a3-cloud-formation-role
                StackName: as-cp-1-stack-pipetest
                #TemplateConfiguration: 'as-cp-1-stack--BuildArtifact::template.json'
                TemplatePath: 'as-cp-1-stack--BuildArtifact::template.yml'
              OutputArtifacts: []
              InputArtifacts:
              - Name: as-cp-1-stack-BuildArtifact
            -
              Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
                RunOrder: 2
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                Capabilities: CAPABILITY_NAMED_IAM,CAPABILITY_AUTO_EXPAND
                ChangeSetName: as-cp-1-set-test
                #ParameterOverrides: '{"ProjectId": "my-project","CodeDeployRole": "CodeDeploy_Role_ARN"}'
                RoleArn: arn:aws:iam::456240511584:role/a3-cloud-formation-role
                StackName: as-cp-1-stack
                #TemplateConfiguration: 'as-cp-1-stack--BuildArtifact::template.json'
                TemplatePath: 'as-cp-1-stack--BuildArtifact::template.yml'
              OutputArtifacts: []
              InputArtifacts:
              - Name: as-cp-1-stack-BuildArtifact

  FrontendCodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: f2020-a3-code-pipeline-2-test
      ArtifactStore: 
        Location: codepipeline-us-east-1-441414766425
        Type: S3
      RestartExecutionOnUpdate: True
      #RoleArn: arn:aws:iam::456240511584:role/service-role/AWSCodePipelineServiceRole-us-east-2-f2020-a3-code-pipeline-2
      RoleArn: arn:aws:iam::456240511584:role/service-role/AWSCodePipelineServiceRole-us-east-1-f2020-a3-pipeline-1
      Stages: 
        - 
          Name: Source 
          Actions: 
            - 
              Name: SourceAction
              ActionTypeId: 
                Category: Source 
                Owner: ThirdParty 
                Version: 1 
                Provider: GitHub
              Configuration:
                Owner: AnchitCap
                Repo: voice-controlled-photo-search
                Branch: front-end
                OAuthToken: 514b8a54386fd3ad7b20a54c7f097d9030079c05
              OutputArtifacts:
                -                
                  Name: SourceArtifact
              Configuration: 
                S3Bucket: !Ref S3Bucketcodepipeline

          Name: Deploy
          Action:
            -
              ActionTypeId:
                Provider: S3
                Owner: AWS
                Category: Deploy
                Version: 1
              Region: us-east-1
              Name: Source
              Configuration:
                BucketName: f2020-a3-static-website-host-bucket-test
                Extract: true
              InputArtifacts:
                - Name: SourceArtifact
